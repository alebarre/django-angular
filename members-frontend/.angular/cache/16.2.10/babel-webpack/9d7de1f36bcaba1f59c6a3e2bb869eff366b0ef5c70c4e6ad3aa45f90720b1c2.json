{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MembersDetailComponent = class MembersDetailComponent {\n  constructor(route, api, router, appComponent) {\n    this.route = route;\n    this.api = api;\n    this.router = router;\n    this.appComponent = appComponent;\n    this.selectedMember = [];\n    this.selectedId = '';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(param => {\n      let id = parseInt(param.get('id') || '{}');\n      this.selectedId = id;\n      this.loadMember(this.selectedId);\n    });\n  }\n  loadMember(memberId) {\n    this.api.getMember(memberId).subscribe(data => {\n      console.log(data);\n      this.selectedMember = data;\n    }, error => {\n      console.log(\"Aconteceu um erro\", error.message);\n    });\n  }\n  update() {\n    this.api.updateMember(this.selectedMember).subscribe(data => {\n      this.selectedMember = data;\n    }, error => {\n      console.log(\"Aconteceu um erro\", error.message);\n    });\n  }\n  newMember() {\n    this.router.navigate(['new-member']);\n  }\n  delete() {\n    this.api.deleteMember(this.selectedId).subscribe(data => {\n      let index = 0;\n      this.appComponent.members.forEach((e, i) => {\n        if (e.id == this.selectedId) {\n          index = i;\n        }\n      });\n      this.appComponent.members.splice(index, 1);\n    }, error => {\n      console.log(\"Aconteceu um erro\", error.message);\n    });\n  }\n};\nMembersDetailComponent = __decorate([Component({\n  selector: 'app-members-detail',\n  templateUrl: './members-detail.component.html',\n  styleUrls: ['./members-detail.component.css']\n})], MembersDetailComponent);","map":{"version":3,"names":["Component","MembersDetailComponent","constructor","route","api","router","appComponent","selectedMember","selectedId","ngOnInit","paramMap","subscribe","param","id","parseInt","get","loadMember","memberId","getMember","data","console","log","error","message","update","updateMember","newMember","navigate","delete","deleteMember","index","members","forEach","e","i","splice","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\aleba\\Projects\\angular\\members\\members-frontend\\src\\app\\members-detail\\members-detail.component.ts"],"sourcesContent":["import { AppComponent } from './../app.component';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-members-detail',\n  templateUrl: './members-detail.component.html',\n  styleUrls: ['./members-detail.component.css']\n})\nexport class MembersDetailComponent implements OnInit{\n\n  public selectedMember: any = [];\n\n  public selectedId: any = '';\n\n  constructor(private route: ActivatedRoute,\n              private api: ApiService,\n              private router: Router,\n              private appComponent: AppComponent){ }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((param: ParamMap) => {\n      let id = parseInt(param.get('id') || '{}');\n      this.selectedId = id;\n      this.loadMember(this.selectedId);\n    });\n\n  }\n\n  loadMember(memberId: any) {\n    this.api.getMember(memberId).subscribe(\n      data => {\n        console.log(data);\n        this.selectedMember = data;\n      },\n      error => {\n        console.log(\"Aconteceu um erro\", error.message)\n      }\n    )\n  }\n\n  update(){\n    this.api.updateMember(this.selectedMember).subscribe(\n      data => {\n        this.selectedMember = data;\n      },\n      error => {\n        console.log(\"Aconteceu um erro\", error.message)\n      }\n    )\n  }\n\n  newMember(){\n    this.router.navigate(['new-member']);\n  }\n\n  delete(){\n    this.api.deleteMember(this.selectedId).subscribe(\n      data => {\n        let index = 0;\n        this.appComponent.members.forEach((e, i) => {\n          if (e.id == this.selectedId){\n            index = i\n          }\n        })\n        this.appComponent.members.splice(index, 1);\n      },\n      error => {\n        console.log(\"Aconteceu um erro\", error.message)\n      }\n    )\n  }\n\n}\n\n\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAMjCC,YAAoBC,KAAqB,EACrBC,GAAe,EACfC,MAAc,EACdC,YAA0B;IAH1B,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IAPzB,KAAAC,cAAc,GAAQ,EAAE;IAExB,KAAAC,UAAU,GAAQ,EAAE;EAKsB;EAEjDC,QAAQA,CAAA;IACN,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,SAAS,CAAEC,KAAe,IAAI;MAChD,IAAIC,EAAE,GAAGC,QAAQ,CAACF,KAAK,CAACG,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;MAC1C,IAAI,CAACP,UAAU,GAAGK,EAAE;MACpB,IAAI,CAACG,UAAU,CAAC,IAAI,CAACR,UAAU,CAAC;IAClC,CAAC,CAAC;EAEJ;EAEAQ,UAAUA,CAACC,QAAa;IACtB,IAAI,CAACb,GAAG,CAACc,SAAS,CAACD,QAAQ,CAAC,CAACN,SAAS,CACpCQ,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACZ,cAAc,GAAGY,IAAI;IAC5B,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,KAAK,CAACC,OAAO,CAAC;IACjD,CAAC,CACF;EACH;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACpB,GAAG,CAACqB,YAAY,CAAC,IAAI,CAAClB,cAAc,CAAC,CAACI,SAAS,CAClDQ,IAAI,IAAG;MACL,IAAI,CAACZ,cAAc,GAAGY,IAAI;IAC5B,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,KAAK,CAACC,OAAO,CAAC;IACjD,CAAC,CACF;EACH;EAEAG,SAASA,CAAA;IACP,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACxB,GAAG,CAACyB,YAAY,CAAC,IAAI,CAACrB,UAAU,CAAC,CAACG,SAAS,CAC9CQ,IAAI,IAAG;MACL,IAAIW,KAAK,GAAG,CAAC;MACb,IAAI,CAACxB,YAAY,CAACyB,OAAO,CAACC,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;QACzC,IAAID,CAAC,CAACpB,EAAE,IAAI,IAAI,CAACL,UAAU,EAAC;UAC1BsB,KAAK,GAAGI,CAAC;;MAEb,CAAC,CAAC;MACF,IAAI,CAAC5B,YAAY,CAACyB,OAAO,CAACI,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IAC5C,CAAC,EACDR,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,KAAK,CAACC,OAAO,CAAC;IACjD,CAAC,CACF;EACH;CAED;AAhEYtB,sBAAsB,GAAAmC,UAAA,EALlCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWtC,sBAAsB,CAgElC"},"metadata":{},"sourceType":"module","externalDependencies":[]}