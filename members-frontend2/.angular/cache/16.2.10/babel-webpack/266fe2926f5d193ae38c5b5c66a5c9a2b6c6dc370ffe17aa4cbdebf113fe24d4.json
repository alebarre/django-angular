{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8000/';\n    this.httpHeaders = new HttpHeaders({\n      'COntent-Type': 'application/json'\n    });\n  }\n  getAllMembers() {\n    return this.http.get(this.baseUrl + 'members/', {\n      headers: this.httpHeaders\n    });\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","baseUrl","httpHeaders","getAllMembers","get","headers","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\aleba\\Projects\\angular\\members\\members-frontend\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private baseUrl = 'http://localhost:8000/'\n\n  httpHeaders = new HttpHeaders({'COntent-Type' : 'application/json'});\n\n  constructor(private http: HttpClient) { }\n\n  getAllMembers(): Observable<any> {\n    return this.http.get(this.baseUrl + 'members/', {headers: this.httpHeaders})\n  }\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,UAAU;EAMrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,OAAO,GAAG,wBAAwB;IAE1C,KAAAC,WAAW,GAAG,IAAIL,WAAW,CAAC;MAAC,cAAc,EAAG;IAAkB,CAAC,CAAC;EAE5B;EAExCM,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,OAAO,GAAG,UAAU,EAAE;MAACI,OAAO,EAAE,IAAI,CAACH;IAAW,CAAC,CAAC;EAC9E;EAAC,QAAAI,CAAA,G;qBAVUR,UAAU,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVb,UAAU;IAAAc,OAAA,EAAVd,UAAU,CAAAe,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}